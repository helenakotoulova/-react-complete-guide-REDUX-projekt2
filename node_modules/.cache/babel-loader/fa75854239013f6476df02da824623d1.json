{"ast":null,"code":"var _jsxFileName = \"D:\\\\Helena\\\\IT\\\\React\\\\ReactKurzComplete\\\\redux-projekt-2\\\\01-starting-project (2)\\\\01-starting-project\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { uiActions } from \"./store/ui-slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const ui = useSelector(state => state.ui.cartIsVisible); // je to state.ui a ne state.uiSlice, protoze bereme ten nazev co mame ve storu v reducers.\n\n  const cart = useSelector(state => state.cart);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(uiActions.showNotification({\n        status: \"pending\",\n        title: \"Sending...\",\n        message: \"Sending cart data...\"\n      }));\n      const response = fetch(\"https://redux-projekt-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        // 'put' is another method provided by firebase. new data will not be added as a list but it will overwrite existing data with new data.\n        body: JSON.stringify(cart)\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed.\");\n      } //const responseData=await response.json(); // tohle nebudeme potrebovat\n\n\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        title: \"Success\",\n        message: \"Sent cart data successfully.\"\n      }));\n    };\n\n    sendCartData().catch(error => {\n      if (!response.ok) {\n        dispatch(uiActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Sending cart data failed.\"\n        }));\n      }\n    });\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [ui && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lifMdno7q9dZHykCgy/ESWzlU34=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n/*\nPosilani dat na backend (firebase) pomoci useEffect. kdyz se zmeni cart, tak se spusti useEffect.\nKazdopadne je zde problem: kdyz spustime nasi appku, tak se posle prazdny kosik na nas backend a prepise to any data stored there.\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Helena/IT/React/ReactKurzComplete/redux-projekt-2/01-starting-project (2)/01-starting-project/src/App.js"],"names":["Cart","Layout","Products","useSelector","useDispatch","useEffect","uiActions","App","ui","state","cartIsVisible","cart","dispatch","sendCartData","showNotification","status","title","message","response","fetch","method","body","JSON","stringify","ok","Error","catch","error"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,EAAE,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACD,EAAN,CAASE,aAArB,CAAtB,CADa,CAC8C;;AAE3D,QAAMC,IAAI,GAAGR,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACE,IAAlB,CAAxB;AAEA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,YAAY,GAAG,YAAY;AAC/BD,MAAAA,QAAQ,CACNN,SAAS,CAACQ,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,SADiB;AAEzBC,QAAAA,KAAK,EAAE,YAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOA,YAAMC,QAAQ,GAAGC,KAAK,CACpB,6DADoB,EAEpB;AACEC,QAAAA,MAAM,EAAE,KADV;AACiB;AACfC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,IAAf;AAFR,OAFoB,CAAtB;;AAOA,UAAI,CAACO,QAAQ,CAACM,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACD,OAjB8B,CAmB/B;;;AACAb,MAAAA,QAAQ,CACNN,SAAS,CAACQ,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,SADiB;AAEzBC,QAAAA,KAAK,EAAE,SAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOD,KA3BD;;AA6BAJ,IAAAA,YAAY,GAAGa,KAAf,CAAsBC,KAAD,IAAW;AAC9B,UAAI,CAACT,QAAQ,CAACM,EAAd,EAAkB;AAChBZ,QAAAA,QAAQ,CACNN,SAAS,CAACQ,gBAAV,CAA2B;AACzBC,UAAAA,MAAM,EAAE,OADiB;AAEzBC,UAAAA,KAAK,EAAE,QAFkB;AAGzBC,UAAAA,OAAO,EAAE;AAHgB,SAA3B,CADM,CAAR;AAOD;AACF,KAVD;AAWD,GAzCQ,EAyCN,CAACN,IAAD,EAAMC,QAAN,CAzCM,CAAT;AA2CA,sBACE,QAAC,MAAD;AAAA,eACGJ,EAAE,iBAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADT,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAxDQD,G;UACIJ,W,EAEEA,W,EAEIC,W;;;KALVG,G;AA0DT,eAAeA,GAAf;AAEA;AACA;AACA;AACA","sourcesContent":["import Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { uiActions } from \"./store/ui-slice\";\n\nfunction App() {\n  const ui = useSelector((state) => state.ui.cartIsVisible); // je to state.ui a ne state.uiSlice, protoze bereme ten nazev co mame ve storu v reducers.\n\n  const cart = useSelector((state) => state.cart);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(\n        uiActions.showNotification({\n          status: \"pending\",\n          title: \"Sending...\",\n          message: \"Sending cart data...\",\n        })\n      );\n      const response = fetch(\n        \"https://redux-projekt-default-rtdb.firebaseio.com/cart.json\",\n        {\n          method: \"PUT\", // 'put' is another method provided by firebase. new data will not be added as a list but it will overwrite existing data with new data.\n          body: JSON.stringify(cart),\n        }\n      );\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed.\");\n      }\n\n      //const responseData=await response.json(); // tohle nebudeme potrebovat\n      dispatch(\n        uiActions.showNotification({\n          status: \"success\",\n          title: \"Success\",\n          message: \"Sent cart data successfully.\",\n        })\n      );\n    };\n\n    sendCartData().catch((error) => {\n      if (!response.ok) {\n        dispatch(\n          uiActions.showNotification({\n            status: \"error\",\n            title: \"Error!\",\n            message: \"Sending cart data failed.\",\n          })\n        );\n      }\n    });\n  }, [cart,dispatch]);\n\n  return (\n    <Layout>\n      {ui && <Cart />}\n      <Products />\n    </Layout>\n  );\n}\n\nexport default App;\n\n/*\nPosilani dat na backend (firebase) pomoci useEffect. kdyz se zmeni cart, tak se spusti useEffect.\nKazdopadne je zde problem: kdyz spustime nasi appku, tak se posle prazdny kosik na nas backend a prepise to any data stored there.\n*/\n"]},"metadata":{},"sourceType":"module"}